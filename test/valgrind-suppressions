{
   Some invalid access on application startup
   Memcheck:Param
   writev(vector[...])
   fun:*writev
   obj:/usr/lib/libX11.so.6.2.0
   fun:_X11TransWritev
   fun:_XSend
   fun:XQueryExtension
   fun:XInitExtension
   fun:XFixesFindDisplay
   fun:XFixesQueryExtension
   fun:gdk_display_open
}
{
   Some ld thing.
   Memcheck:Cond
   fun:_dl_start
   fun:_start
   obj:*
   obj:*
   obj:*
   obj:*
}
{
   something else, dunno what exactly
   Memcheck:Param
   write(buf)
   fun:*write*
   fun:_X11TransWrite*
   obj:/usr/lib/libX11.so*
}
{
   Some home directory stuff, happens when loading the engine
   Memcheck:Leak
   fun:malloc
   fun:nss_parse_service_list
   fun:__nss_database_lookup
   obj:*
   obj:*
   fun:getpwnam_r@@GLIBC_2.1.2
   fun:g_get_any_init_do
   fun:g_get_home_dir
}
{
   pango/fc leak
   Memcheck:Leak
   fun:*alloc
   fun:FcPatternObject*
}
{
   pango/fc leak
   Memcheck:Leak
   fun:*alloc
   fun:FcConfigValues*
   fun:FcConfigSubstituteWithPat
}
{
   Some GLib leak that valgrind reports
   Memcheck:Leak
   ...
   fun:type_iface_vtable_base_init_Wm
}
{
   Some GLib leak that valgrind reports
   Memcheck:Leak
   ...
   fun:type_data_make_W
   fun:g_type_init_with_debug_flags
}
{
   More GLib stuff
   Memcheck:Leak
   ...
   fun:type_node_any_new_W
   fun:g_type_register_*
}
{
   More GLib stuff
   Memcheck:Leak
   ...
   fun:type_add_flags_W
   fun:g_type_register_*
}
{
   More GLib stuff
   Memcheck:Leak
   ...
   fun:g_*alloc*
   fun:type_data_make_W
   fun:g_type_register_*
}
{
   This is getting ridiculus
   Memcheck:Leak
   ...
   fun:g_type_add_interface_*
}
{
   Leak in gdk_display_open/XInitExtension.
   Memcheck:Leak
   fun:malloc
   fun:XInitExtension
   fun:XkbUseExtension
   fun:XOpenDisplay
   fun:gdk_display_open
}
{
   gtk_widget_class_init leak
   Memcheck:Leak
   fun:calloc
   fun:g_malloc0
   ...
   fun:g_param_spec_*
   fun:gtk_widget_class_init
}
{
   More pango leaks reported by valgrind
   Memcheck:Leak
   fun:calloc
   fun:g_malloc0
   fun:pango_language_from_string
   fun:pango_language_get_default
   fun:pango_context_init
}
{
   And more GType object leakage when creating parent classes
   Memcheck:Leak
   fun:calloc
   fun:g_malloc0
   fun:g_type_class_ref
   fun:g_type_class_ref
   fun:g_type_create_instance
}
{
   More pango leaks
   Memcheck:Leak
   fun:malloc
   fun:g_malloc
   fun:g_slice_alloc
   fun:g_array_sized_new
   fun:pango_ot_ruleset_init
   ...
   fun:basic_engine_shape
}
{
   leak
   Memcheck:Leak
   fun:malloc
   fun:getdelim
   ...
   fun:call_init
   fun:_dl_init
   fun:_start
}
